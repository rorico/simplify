eriouhaisndjfksdjn C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\node-fetch-npm\src\index.js
statFix.orig.call(require("fs"), "C:\\Program Files\\nodejs\\node.exe" + ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC".split(";")[0], function(er, stats) {}) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\graceful-fs\polyfills.js
statFix.orig.call(require("fs"), "C:\\Program Files\\nodejs\\node.exe" + ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC".split(";")[0], function(er, stats) {}).stats.isSymbolicLink() C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\isexe\windows.js
statFix.orig.call(require("fs"), "C:\\Program Files\\nodejs\\node.exe" + ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC".split(";")[0], function(er, stats) {}).stats.isFile() C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\isexe\windows.js
require("events").apply({}) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\config-chain\index.js
require("os").type() C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\has-unicode\index.js
process.umask() C:\Users\danie\Desktop\simplify\node_modules\npm\lib\config\defaults.js
    readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\graceful-fs\graceful-fs.js
process.emit("load", {_events: {load: function() {}, error: function(er, conf) {}}, _eventsCount: 2, _maxListeners: undefined, list: [some_function_with_external_call.data], root: getter, _awaiting: 0, _saving: 0, sources: {builtin: {path: "C:\\Users\\danie\\Desktop\\simplify\\node_modules\\npm\\npmrc", type: "ini", data: some_function_with_external_call.data}}}) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\config-chain\index.js
require("events").apply({}) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\config-chain\index.js
process.nextTick(Object.create(ProtoList.prototype, {constructor: {value: ConfigChain}, _events: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[0]), _eventsCount: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[1]), _maxListeners: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[2]), setMaxListeners: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[3]), getMaxListeners: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[4]), emit: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[5]), addListener: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[6]), on: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[7]), prependListener: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[8]), once: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[9]), prependOnceListener: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[10]), removeListener: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[11]), off: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[12]), removeAllListeners: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[13]), listeners: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[14]), rawListeners: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[15]), listenerCount: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[16]), eventNames: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[17])})._resolve.bind({_events: {}, _eventsCount: 0, _maxListeners: undefined, list: [Object.keys({}).reduce(function(c, k) {}, {})], root: getter, _awaiting: 1, _saving: 0, sources: {cli: {data: Object.keys({}).reduce(function(c, k) {}, {})}}, usingBuiltin: true})) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\config-chain\index.js
process.nextTick(Object.create(ProtoList.prototype, {constructor: {value: ConfigChain}, _events: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[0]), _eventsCount: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[1]), _maxListeners: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[2]), setMaxListeners: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[3]), getMaxListeners: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[4]), emit: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[5]), addListener: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[6]), on: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[7]), prependListener: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[8]), once: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[9]), prependOnceListener: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[10]), removeListener: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[11]), off: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[12]), removeAllListeners: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[13]), listeners: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[14]), rawListeners: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[15]), listenerCount: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[16]), eventNames: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[17])})._resolve.bind({_events: {}, _eventsCount: 0, _maxListeners: undefined, list: [Object.keys({}).reduce(function(c, k) {}, {}), Object.setPrototypeOf({}, some_function_with_external_call.data)], root: getter, _awaiting: 2, _saving: 0, sources: {cli: {data: Object.keys({}).reduce(function(c, k) {}, {})}, env: {data: Object.setPrototypeOf({}, some_function_with_external_call.data), source: {}, prefix: ""}}, usingBuiltin: true})) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\config-chain\index.js
some_function_with_external_call.resolve({}) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\find-npm-prefix\find-prefix.js
process.emit("load", {_events: {}, _eventsCount: 0, _maxListeners: undefined, list: [Object.keys({}).reduce(function(c, k) {}, {}), Object.setPrototypeOf({}, some_function_with_external_call.data)], root: getter, _awaiting: 0, _saving: 0, sources: {cli: {data: Object.keys({}).reduce(function(c, k) {}, {})}, env: {data: Object.setPrototypeOf({}, some_function_with_external_call.data), source: {}, prefix: ""}}, usingBuiltin: true, prefix: getter, globalPrefix: getter, localPrefix: getter}) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\config-chain\index.js
require("fs").readdir.apply(require("fs"), ["C:\\Users\\danie\\Desktop\\simplify", function go$readdir$cb(err, files) {}]).files.sort() C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\graceful-fs\graceful-fs.js
require("fs").readdir.apply(require("fs"), ["C:\\Users\\danie\\Desktop\\simplify", function go$readdir$cb(err, files) {}]).files.indexOf("node_modules") C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\find-npm-prefix\find-prefix.js
some_function_with_external_call.resolve(findPrefix_.dir) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\find-npm-prefix\find-prefix.js
readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\graceful-fs\graceful-fs.js
process.emit("load", {_events: {load: function}, _eventsCount: 1, _maxListeners: undefined, list: [Object.keys({}).reduce(function(c, k) {}, {}), Object.setPrototypeOf({}, some_function_with_external_call.data), some_function_with_external_call.data], root: getter, _awaiting: 0, _saving: 0, sources: {cli: {data: Object.keys({}).reduce(function(c, k) {}, {})}, env: {data: Object.setPrototypeOf({}, some_function_with_external_call.data), source: {}, prefix: ""}, project: {path: "C:\\Users\\danie\\Desktop\\simplify\\.npmrc", type: "ini", data: some_function_with_external_call.data}}, usingBuiltin: true, prefix: getter, globalPrefix: getter, localPrefix: getter}) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\config-chain\index.js
readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(Object.keys({}).reduce(function(c, k) {}, {}).userconfig, readFile.options, function(err) {}).err}) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\graceful-fs\graceful-fs.js
readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).list.indexOf(Object.setPrototypeOf({__source__: "user"}, some_function_with_external_call.data)) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\config-chain\index.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).sources.user = readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).sources.user
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).sources.user.data = some_function_with_external_call.data
process.emit("load", readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err})) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\config-chain\index.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).sources.global = {path: "C:\\Program Files\\nodejs\\etc\\npmrc", type: "ini"}
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root = {access: null, allow-same-version: false, always-auth: false, also: null, audit: true, audit-level: "low", auth-type: "legacy", before: null, bin-links: true, browser: null, ca: null, cafile: null, cache: "C:\\Users\\danie\\AppData\\Roaming\\npm-cache", cache-lock-stale: 60000, cache-lock-retries: 10, cache-lock-wait: 10000, cache-max: Infinity, cache-min: 10, cert: null, cidr: null, color: true, depth: Infinity, description: true, dev: false, dry-run: false, editor: "notepad.exe", engine-strict: false, force: false, fetch-retries: 2, fetch-retry-factor: 10, fetch-retry-mintimeout: 10000, fetch-retry-maxtimeout: 60000, git: "git", git-tag-version: true, commit-hooks: true, global: false, globalconfig: "C:\\Program Files\\nodejs\\etc\\npmrc", global-style: false, group: 0, ham-it-up: false, heading: "npm", if-present: false, ignore-prepublish: false, ignore-scripts: false, init-module: "C:\\Users\\danie\\.npm-init.js", init-author-name: "", init-author-email: "", init-author-url: "", init-version: "1.0.0", init-license: "ISC", json: false, key: null, legacy-bundling: false, link: false, local-address: undefined, loglevel: "notice", logstream: process.stderr, logs-max: 10, long: false, maxsockets: 50, message: "%s", metrics-registry: null, node-options: null, node-version: "v10.0.0", offline: false, onload-script: false, only: null, optional: true, otp: null, package-lock: true, package-lock-only: false, parseable: false, prefer-offline: false, prefer-online: false, prefix: "C:\\Program Files\\nodejs", preid: "", production: false, progress: true, proxy: null, https-proxy: null, noproxy: null, user-agent: "npm/{npm-version} node/{node-version} {platform} {arch}", read-only: false, rebuild-bundle: true, registry: "https://registry.npmjs.org/", rollback: true, save: true, save-bundle: false, save-dev: false, save-exact: false, save-optional: false, save-prefix: "^", save-prod: false, scope: "", script-shell: null, scripts-prepend-node-path: "warn-only", searchopts: "", searchexclude: null, searchlimit: 20, searchstaleness: 900, send-metrics: false, shell: "C:\\Windows\\system32\\cmd.exe", shrinkwrap: true, sign-git-commit: false, sign-git-tag: false, sso-poll-frequency: 500, sso-type: "oauth", strict-ssl: true, tag: "latest", tag-version-prefix: "v", timing: false, tmp: "C:\\Users\\danie\\AppData\\Local\\Temp", unicode: false, unsafe-perm: true, update-notifier: true, usage: false, user: 0, userconfig: "C:\\Users\\danie\\.npmrc", umask: 0, version: false, versions: false, viewer: "browser", _exit: true, globalignorefile: "C:\\Program Files\\nodejs\\etc\\npmignore"}
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).sources.builtin = {}
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).sources.builtin.data = some_function_with_external_call.data
process.nextTick(Object.create(ProtoList.prototype, {constructor: {value: ConfigChain}, _events: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[0]), _eventsCount: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[1]), _maxListeners: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[2]), setMaxListeners: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[3]), getMaxListeners: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[4]), emit: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[5]), addListener: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[6]), on: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[7]), prependListener: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[8]), once: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[9]), prependOnceListener: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[10]), removeListener: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[11]), off: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[12]), removeAllListeners: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[13]), listeners: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[14]), rawListeners: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[15]), listenerCount: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[16]), eventNames: Object.getOwnPropertyDescriptor(require("events").prototype, Object.keys(require("events").prototype)[17])})._resolve.bind(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}))) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\config-chain\index.js
readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(Object.keys({}).reduce(function(c, k) {}, {}).globalconfig, readFile.options, function(err) {}).err}) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\graceful-fs\graceful-fs.js
readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).list.indexOf(Object.setPrototypeOf({__source__: "global"}, some_function_with_external_call.data)) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\config-chain\index.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).sources.global = readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).sources.global
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).sources.global.data = some_function_with_external_call.data
process.emit("load", readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err})) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\config-chain\index.js
require("assert")(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root !== require("fs").__proto__) C:\Users\danie\Desktop\simplify\node_modules\npm\lib\config\set-user.js
process.umask() C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\mkdirp\index.js
require("fs").mkdir("C:\\Program Files\\nodejs", 511, function(er) {}) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\mkdirp\index.js
statFix.orig.call(require("fs"), some_function_with_external_call.target, function(er, stats) {}) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\graceful-fs\polyfills.js
statFix.orig.call(require("fs"), some_function_with_external_call.target, function(er, stats) {}).stats.isDirectory() C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\mkdirp\index.js
statFix.orig.call(require("fs"), some_function_with_external_call.target, function(er, stats) {}) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\graceful-fs\polyfills.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.user = 0
setUser.cb(some_function_with_external_call.er) C:\Users\danie\Desktop\simplify\node_modules\npm\lib\config\set-user.js
process.nextTick(loadUid.cb) C:\Users\danie\Desktop\simplify\node_modules\npm\lib\config\load-uid.js
process.umask() C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\mkdirp\index.js
require("fs").mkdir("C:\\Users\\danie\\Desktop\\simplify", 511, function(er) {}) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\mkdirp\index.js
statFix.orig.call(require("fs"), some_function_with_external_call.target, function(er, stats) {}) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\graceful-fs\polyfills.js
statFix.orig.call(require("fs"), some_function_with_external_call.target, function(er, stats) {}).stats.isDirectory() C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\mkdirp\index.js
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.access) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, "restricted", "public"]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, "restricted", "public"]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(validate.type) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.access = null
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.allow-same-version) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.allow-same-version = false
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.always-auth) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.always-auth = false
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.also) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, "dev", "development"]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, "dev", "development"]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(validate.type) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.also = null
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.audit) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.audit = true
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.audit-level) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(["low", "moderate", "high", "critical"]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(["low", "moderate", "high", "critical"]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(validate.type) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.audit-level = "low"
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.auth-type) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(["legacy", "sso", "saml", "oauth"]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(["legacy", "sso", "saml", "oauth"]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(validate.type) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.auth-type = "legacy"
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.before) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, Date]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, Date]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(validate.type) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.before = null
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.bin-links) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.bin-links = true
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.browser) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, String]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, String]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(validate.type) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.browser = null
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.ca) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, String, Array]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, String, Array]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(validate.type) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.ca = null
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.cafile) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(require("path")) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(require("path")) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.cafile = undefined
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.cache) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(require("path")) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(require("path")) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.cache = "C:\\Users\\danie\\AppData\\Roaming\\npm-cache"
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.cache-lock-stale) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Number) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Number) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
isNaN(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.cache-lock-stale) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
isNaN(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.cache-lock-stale) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.cache-lock-stale = 60000
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.cache-lock-retries) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Number) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Number) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
isNaN(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.cache-lock-retries) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
isNaN(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.cache-lock-retries) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.cache-lock-retries = 10
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.cache-lock-wait) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Number) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Number) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
isNaN(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.cache-lock-wait) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
isNaN(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.cache-lock-wait) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.cache-lock-wait = 10000
Array.isArray(Infinity) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Number) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Number) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
isNaN(Infinity) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
isNaN(Infinity) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.cache-max = Infinity
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.cache-min) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Number) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Number) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
isNaN(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.cache-min) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
isNaN(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.cache-min) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.cache-min = 10
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.cert) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, String]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, String]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(validate.type) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.cert = null
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.cidr) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, String, Array]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, String, Array]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(validate.type) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.cidr = null
Array.isArray(process.env.NO_COLOR == null) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(["always", Boolean]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(["always", Boolean]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(validate.type) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.color = true
Array.isArray(Infinity) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Number) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Number) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
isNaN(Infinity) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
isNaN(Infinity) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.depth = Infinity
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.description) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.description = true
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.dev) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.dev = false
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.dry-run) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.dry-run = false
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.editor) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(String) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(String) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.editor = "notepad.exe"
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.engine-strict) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.engine-strict = false
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.force) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.force = false
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.fetch-retries) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Number) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Number) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
isNaN(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.fetch-retries) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
isNaN(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.fetch-retries) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.fetch-retries = 2
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.fetch-retry-factor) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Number) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Number) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
isNaN(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.fetch-retry-factor) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
isNaN(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.fetch-retry-factor) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.fetch-retry-factor = 10
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.fetch-retry-mintimeout) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Number) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Number) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
isNaN(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.fetch-retry-mintimeout) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
isNaN(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.fetch-retry-mintimeout) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.fetch-retry-mintimeout = 10000
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.fetch-retry-maxtimeout) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Number) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Number) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
isNaN(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.fetch-retry-maxtimeout) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
isNaN(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.fetch-retry-maxtimeout) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.fetch-retry-maxtimeout = 60000
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.git) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(String) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(String) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.git = "git"
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.git-tag-version) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.git-tag-version = true
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.commit-hooks) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.commit-hooks = true
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.global) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.global = false
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.globalconfig) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(require("path")) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(require("path")) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.globalconfig = "C:\\Program Files\\nodejs\\etc\\npmrc"
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.global-style) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.global-style = false
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.group) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([Number, String]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([Number, String]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Number) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
isNaN(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.group) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
isNaN(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.group) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.group = 0
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.ham-it-up) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.ham-it-up = false
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.heading) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(String) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(String) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.heading = "npm"
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.if-present) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.if-present = false
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.ignore-prepublish) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.ignore-prepublish = false
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.ignore-scripts) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.ignore-scripts = false
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.init-module) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(require("path")) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(require("path")) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.init-module = "C:\\Users\\danie\\.npm-init.js"
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.init-author-name) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(String) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(String) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.init-author-name = ""
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.init-author-email) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(String) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(String) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.init-author-email = ""
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.init-author-url) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(["", require("url")]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(["", require("url")]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(validate.type) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.init-author-url = ""
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.init-version) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(SemVer) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(SemVer) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.init-version = "1.0.0"
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.init-license) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(String) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(String) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.init-license = "ISC"
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.json) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.json = false
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.key) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, String]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, String]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(validate.type) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.key = null
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.legacy-bundling) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.legacy-bundling = false
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.link) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.link = false
Array.isArray(undefined) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(some_function_with_external_call.curr.concat([undefined, undefined, undefined, undefined, undefined]).concat([undefined, undefined]).concat(undefined)) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(some_function_with_external_call.curr.concat([undefined, undefined, undefined, undefined, undefined]).concat([undefined, undefined]).concat(undefined)) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(some_function_with_external_call.curr.concat([undefined, undefined, undefined, undefined, undefined]).concat([undefined, undefined]).concat(undefined)[0]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.local-address = undefined
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.loglevel) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(["silent", "error", "warn", "notice", "http", "timing", "info", "verbose", "silly"]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(["silent", "error", "warn", "notice", "http", "timing", "info", "verbose", "silly"]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(validate.type) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(validate.type) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(validate.type) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(validate.type) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.loglevel = "notice"
Array.isArray(process.stderr) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(require("stream")) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(require("stream")) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.logstream = process.stderr
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.logs-max) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Number) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Number) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
isNaN(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.logs-max) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
isNaN(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.logs-max) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.logs-max = 10
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.long) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.long = false
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.maxsockets) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Number) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Number) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
isNaN(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.maxsockets) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
isNaN(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.maxsockets) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.maxsockets = 50
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.message) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(String) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(String) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.message = "%s"
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.metrics-registry) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, String]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, String]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(validate.type) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.metrics-registry = null
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.node-options) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, String]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, String]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(validate.type) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.node-options = null
Array.isArray(process.version) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, SemVer]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, SemVer]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(validate.type) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(SemVer) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.node-version = "10.0.0"
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.offline) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.offline = false
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.onload-script) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, String]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, String]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(validate.type) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.onload-script = null
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.only) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, "dev", "development", "prod", "production"]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, "dev", "development", "prod", "production"]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(validate.type) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.only = null
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.optional) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.optional = true
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.otp) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, String]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, String]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(validate.type) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.otp = null
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.package-lock) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.package-lock = true
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.package-lock-only) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.package-lock-only = false
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.parseable) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.parseable = false
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.prefer-offline) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.prefer-offline = false
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.prefer-online) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.prefer-online = false
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.prefix) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(require("path")) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(require("path")) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.prefix = "C:\\Program Files\\nodejs"
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.preid) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(String) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(String) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.preid = ""
Array.isArray(process.env.NODE_ENV === "production") C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.production = false
Array.isArray(!process.env.CI) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.progress = true
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.proxy) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, false, require("url")]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, false, require("url")]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(validate.type) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.proxy = null
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.https-proxy) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, require("url")]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, require("url")]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(validate.type) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.https-proxy = null
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.noproxy) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, String, Array]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, String, Array]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(validate.type) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.noproxy = null
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.user-agent) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(String) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(String) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.user-agent = "npm/{npm-version} node/{node-version} {platform} {arch}"
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.read-only) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.read-only = false
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.rebuild-bundle) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.rebuild-bundle = true
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.registry) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, require("url")]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, require("url")]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(validate.type) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(require("url")) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.registry = "https://registry.npmjs.org/"
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.rollback) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.rollback = true
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.save) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.save = true
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.save-bundle) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.save-bundle = false
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.save-dev) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.save-dev = false
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.save-exact) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.save-exact = false
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.save-optional) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.save-optional = false
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.save-prefix) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(String) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(String) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.save-prefix = "^"
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.save-prod) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.save-prod = false
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.scope) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(String) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(String) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.scope = ""
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.script-shell) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, String]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, String]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(validate.type) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.script-shell = null
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.scripts-prepend-node-path) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([false, true, "auto", "warn-only"]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([false, true, "auto", "warn-only"]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(validate.type) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(validate.type) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(validate.type) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(validate.type) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.scripts-prepend-node-path = "warn-only"
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.searchopts) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(String) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(String) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.searchopts = ""
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.searchexclude) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, String]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, String]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(validate.type) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.searchexclude = null
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.searchlimit) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Number) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Number) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
isNaN(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.searchlimit) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
isNaN(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.searchlimit) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.searchlimit = 20
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.searchstaleness) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Number) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Number) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
isNaN(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.searchstaleness) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
isNaN(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.searchstaleness) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.searchstaleness = 900
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.send-metrics) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.send-metrics = false
Array.isArray(process.env.ComSpec) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(String) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(String) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.shell = "C:\\Windows\\system32\\cmd.exe"
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.shrinkwrap) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.shrinkwrap = true
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.sign-git-commit) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.sign-git-commit = false
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.sign-git-tag) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.sign-git-tag = false
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.sso-poll-frequency) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Number) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Number) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
isNaN(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.sso-poll-frequency) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
isNaN(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.sso-poll-frequency) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.sso-poll-frequency = 500
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.sso-type) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, "oauth", "saml"]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([null, "oauth", "saml"]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(validate.type) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(validate.type) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.sso-type = "oauth"
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.strict-ssl) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.strict-ssl = true
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.tag) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(String) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(String) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.tag = "latest"
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.tag-version-prefix) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(String) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(String) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.tag-version-prefix = "v"
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.timing) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.timing = false
Array.isArray(process.env.TEMP) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(require("path")) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(require("path")) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.tmp = "C:\\Users\\danie\\AppData\\Local\\Temp"
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.unicode) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.unicode = false
Array.isArray(process.platform === "win32") C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.unsafe-perm = true
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.update-notifier) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.update-notifier = true
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.usage) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.usage = false
Array.isArray(statFix.orig.call(require("fs"), some_function_with_external_call.target, function(er, stats) {}).stats.uid) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([Number, String]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([Number, String]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Number) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
isNaN(statFix.orig.call(require("fs"), some_function_with_external_call.target, function(er, stats) {}).stats.uid) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
isNaN(statFix.orig.call(require("fs"), some_function_with_external_call.target, function(er, stats) {}).stats.uid) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.user = 0
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.userconfig) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(require("path")) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(require("path")) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.userconfig = "C:\\Users\\danie\\.npmrc"
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.umask) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Umask) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Umask) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
isNaN(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.umask) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\umask\index.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.umask = 0
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.version) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.version = false
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.versions) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.versions = false
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.viewer) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(String) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(String) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.viewer = "browser"
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root._exit) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray(Boolean) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root._exit = true
Array.isArray(readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.globalignorefile) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
Array.isArray([false, true, null, String, Array]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\nopt\lib\nopt.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).root.globalignorefile = "C:\\Program Files\\nodejs\\etc\\npmignore"
assigned Object.keys({}).reduce(function(c, k) {}, {}).user-agent = "npm/6.9.0 node/v10.0.0 win32 x64"
assigned Object.keys({}).reduce(function(c, k) {}, {}).metrics-registry = "https://registry.npmjs.org/"
Array.isArray(validate.args) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\aproba\index.js
require("os").type() C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\has-unicode\index.js
Array.isArray(validate.args) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\aproba\index.js
Array.isArray(validate.args[0]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\aproba\index.js
Array.isArray(validate.args) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\aproba\index.js
Array.isArray(validate.args[0]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\aproba\index.js
require("assert").equal("function", "function", "a callback must be provided for exit handler") C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\signal-exit\index.js
assigned process.__signal_exit_emitter__.count += 1
process.on(Object(["SIGABRT", "SIGALRM", "SIGHUP", "SIGINT", "SIGTERM"])[0], function listener() {}) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\signal-exit\index.js
process.on(Object(["SIGABRT", "SIGALRM", "SIGHUP", "SIGINT", "SIGTERM"])[1], function listener() {}) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\signal-exit\index.js
process.on(Object(["SIGABRT", "SIGALRM", "SIGHUP", "SIGINT", "SIGTERM"])[2], function listener() {}) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\signal-exit\index.js
process.on(Object(["SIGABRT", "SIGALRM", "SIGHUP", "SIGINT", "SIGTERM"])[3], function listener() {}) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\signal-exit\index.js
process.on(Object(["SIGABRT", "SIGALRM", "SIGHUP", "SIGINT", "SIGTERM"])[4], function listener() {}) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\signal-exit\index.js
assigned process.emit = processEmit
assigned process.reallyExit = processReallyExit
process.__signal_exit_emitter__.on("exit", function() {}) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\signal-exit\index.js
process.stderr.on("resize", function() {}) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\gauge\index.js
Array.isArray([]) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\glob\common.js
Boolean(false) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\path-is-absolute\index.js
Boolean("\\") C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\path-is-absolute\index.js
require("assert")({silent: false, pattern: "C:\\Users\\danie\\AppData\\Roaming\\npm-cache\\_logs\\*-debug.log", strict: true, realpath: false, realpathCache: Object.create(null), follow: false, dot: false, mark: false, nodir: false, sync: false, nounique: false, nonull: false, nosort: false, nocase: false, stat: false, noprocess: false, absolute: false, maxLength: Infinity, cache: Object.create(null), statCache: Object.create(null), symlinks: Object.create(null), ignore: [], changedCwd: false, cwd: "C:\\Users\\danie\\Desktop\\simplify", root: "C:/", cwdAbs: "C:/Users/danie/Desktop/simplify", nomount: false, minimatch: {options: {nonegate: true, nocomment: true}, set: [["C:", "Users", "danie", "AppData", "Roaming", "npm-cache", "_logs", {_glob: "*-debug.log", _src: "(?!\\.)(?=.)[^/]*?-debug\\.log"}]], pattern: "C:/Users/danie/AppData/Roaming/npm-cache/_logs/*-debug.log", regexp: null, negate: false, comment: false, empty: false, globSet: Object(["C:/Users/danie/AppData/Roaming/npm-cache/_logs/*-debug.log"]), globParts: Object(["C:/Users/danie/AppData/Roaming/npm-cache/_logs/*-debug.log".split({})])}, options: {nonegate: true, nocomment: true}, _didRealPath: false, matches: [], _events: {error: function(er, files) {}, end: function(matches) {}}, _eventsCount: 2, _processing: 0, _emitQueue: [], _processQueue: [], paused: false} instanceof Glob) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\glob\glob.js
require("assert")(typeof done === "function") C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\glob\glob.js
Boolean(false) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\path-is-absolute\index.js
Boolean("/") C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\path-is-absolute\index.js
Boolean(false) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\path-is-absolute\index.js
Boolean("/") C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\path-is-absolute\index.js
Boolean(false) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\path-is-absolute\index.js
Boolean("/") C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\path-is-absolute\index.js
assigned Object.create(null).readdir C:/Users/danie/AppData/Roaming/npm-cache/_logs false = [some_function_with_external_call.cb]
assigned Object.keys({}).reduce(function(c, k) {}, {}).scope = ""
require("fs").readFileSync("C:\\Users\\danie\\Desktop\\simplify\\package.json") node_modules/npm/lib/npm.js
some_function_with_external_call.fs$readSync.call(require("fs"), some_function_with_external_call.fd, some_function_with_external_call.buffer, some_function_with_external_call.offset, some_function_with_external_call.length, some_function_with_external_call.position) C:\Users\danie\Desktop\simplify\node_modules\npm\node_modules\graceful-fs\polyfills.js
JSON.parse(some_function_with_external_call.buffer) node_modules/npm/lib/npm.js
assigned readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}).loaded = true
process.nextTick(some_function_with_external_call.cli.bind({_events: {}, _eventsCount: 0, _maxListeners: undefined, config: readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}), commands: {access: getter, add: getter, add-user: getter, adduser: getter, apihelp: getter, audit: getter, author: getter, bin: getter, bugs: getter, c: getter, cache: getter, ci: getter, cit: getter, clean-install: getter, clean-install-test: getter, completion: getter, config: getter, create: getter, ddp: getter, dedupe: getter, deprecate: getter, dist-tag: getter, dist-tags: getter, docs: getter, doctor: getter, edit: getter, explore: getter, find: getter, find-dupes: getter, get: getter, help: getter, help-search: getter, home: getter, hook: getter, i: getter, ic: getter, info: getter, init: getter, innit: getter, install: getter, install-ci-test: getter, install-clean: getter, install-test: getter, isntall-clean: getter, issues: getter, it: getter, la: getter, link: getter, list: getter, ll: getter, ln: getter, login: getter, logout: getter, ls: getter, ogr: getter, org: getter, outdated: getter, owner: getter, pack: getter, ping: getter, prefix: getter, profile: getter, prune: getter, publish: getter, r: getter, rb: getter, rebuild: getter, remove: getter, repo: getter, restart: getter, rm: getter, root: getter, rum: getter, run: getter, run-script: getter, s: getter, se: getter, search: getter, set: getter, show: getter, shrinkwrap: getter, sit: getter, star: getter, stars: getter, start: getter, stop: getter, t: getter, team: getter, test: getter, token: getter, tst: getter, udpate: getter, un: getter, uninstall: getter, unlink: getter, unpublish: getter, unstar: getter, up: getter, update: getter, upgrade: getter, urn: getter, v: getter, version: getter, view: getter, whoami: getter}, limit: {fetch: 10, action: 50}, lockfileVersion: 1, rollbacks: [], name: "npm", version: "6.9.0", fullList: ["ci", "install-ci-test", "install", "install-test", "uninstall", "cache", "config", "set", "get", "update", "outdated", "prune", "pack", "dedupe", "hook", "rebuild", "link", "publish", "star", "stars", "adduser", "login", "logout", "unpublish", "owner", "access", "team", "deprecate", "shrinkwrap", "token", "profile", "audit", "org", "help", "help-search", "ls", "search", "view", "init", "version", "edit", "explore", "docs", "repo", "bugs", "root", "prefix", "bin", "whoami", "dist-tag", "ping", "test", "stop", "start", "restart", "run-script", "completion", "doctor", "un", "rb", "list", "ln", "create", "i", "it", "cit", "up", "c", "s", "se", "unstar", "tst", "t", "ddp", "v", "run", "clean-install", "clean-install-test", "la", "ll", "ic", "innit", "install-clean", "isntall-clean", "dist-tags", "apihelp", "find-dupes", "upgrade", "udpate", "login", "add-user", "author", "home", "issues", "info", "show", "find", "add", "unlink", "remove", "rm", "r", "rum", "sit", "urn", "ogr"], deref: function(c) {}, load: function(cli, cb_) {}, prefix: getter, bin: getter, dir: getter, globalDir: getter, cache: getter, tmp: getter, color: undefined, modes: {exec: 511, file: 438, umask: 0}, globalPrefix: getter, localPrefix: getter, projectScope: "", metricsProcess: undefined}, cb.er, {_events: {}, _eventsCount: 0, _maxListeners: undefined, config: readFile.cb.apply({fd: undefined, isUserFd: false, size: undefined, callback: function(err) {}, buffers: null, buffer: null, pos: 0, encoding: "utf8", err: null}, {0: require("fs").readFile(some_function_with_external_call.file, readFile.options, function(err) {}).err}), commands: {access: getter, add: getter, add-user: getter, adduser: getter, apihelp: getter, audit: getter, author: getter, bin: getter, bugs: getter, c: getter, cache: getter, ci: getter, cit: getter, clean-install: getter, clean-install-test: getter, completion: getter, config: getter, create: getter, ddp: getter, dedupe: getter, deprecate: getter, dist-tag: getter, dist-tags: getter, docs: getter, doctor: getter, edit: getter, explore: getter, find: getter, find-dupes: getter, get: getter, help: getter, help-search: getter, home: getter, hook: getter, i: getter, ic: getter, info: getter, init: getter, innit: getter, install: getter, install-ci-test: getter, install-clean: getter, install-test: getter, isntall-clean: getter, issues: getter, it: getter, la: getter, link: getter, list: getter, ll: getter, ln: getter, login: getter, logout: getter, ls: getter, ogr: getter, org: getter, outdated: getter, owner: getter, pack: getter, ping: getter, prefix: getter, profile: getter, prune: getter, publish: getter, r: getter, rb: getter, rebuild: getter, remove: getter, repo: getter, restart: getter, rm: getter, root: getter, rum: getter, run: getter, run-script: getter, s: getter, se: getter, search: getter, set: getter, show: getter, shrinkwrap: getter, sit: getter, star: getter, stars: getter, start: getter, stop: getter, t: getter, team: getter, test: getter, token: getter, tst: getter, udpate: getter, un: getter, uninstall: getter, unlink: getter, unpublish: getter, unstar: getter, up: getter, update: getter, upgrade: getter, urn: getter, v: getter, version: getter, view: getter, whoami: getter}, limit: {fetch: 10, action: 50}, lockfileVersion: 1, rollbacks: [], name: "npm", version: "6.9.0", fullList: ["ci", "install-ci-test", "install", "install-test", "uninstall", "cache", "config", "set", "get", "update", "outdated", "prune", "pack", "dedupe", "hook", "rebuild", "link", "publish", "star", "stars", "adduser", "login", "logout", "unpublish", "owner", "access", "team", "deprecate", "shrinkwrap", "token", "profile", "audit", "org", "help", "help-search", "ls", "search", "view", "init", "version", "edit", "explore", "docs", "repo", "bugs", "root", "prefix", "bin", "whoami", "dist-tag", "ping", "test", "stop", "start", "restart", "run-script", "completion", "doctor", "un", "rb", "list", "ln", "create", "i", "it", "cit", "up", "c", "s", "se", "unstar", "tst", "t", "ddp", "v", "run", "clean-install", "clean-install-test", "la", "ll", "ic", "innit", "install-clean", "isntall-clean", "dist-tags", "apihelp", "find-dupes", "upgrade", "udpate", "login", "add-user", "author", "home", "issues", "info", "show", "find", "add", "unlink", "remove", "rm", "r", "rum", "sit", "urn", "ogr"], deref: function(c) {}, load: function(cli, cb_) {}, prefix: getter, bin: getter, dir: getter, globalDir: getter, cache: getter, tmp: getter, color: undefined, modes: {exec: 511, file: 438, umask: 0}, globalPrefix: getter, localPrefix: getter, projectScope: "", metricsProcess: undefined})) node_modules/npm/lib/npm.js
assigned Object([some_function_with_external_call.cli]).length = 0
assigned Object([function(er, config) {}]).length = 0
